"""
Django management –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python manage.py cache_stats
"""

from django.core.management.base import BaseCommand
from django.core.cache import caches
from profiles.cache_utils import get_cache_stats, cache_manager


class Command(BaseCommand):
    help = '–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è'

    def add_arguments(self, parser):
        parser.add_argument(
            '--clear',
            action='store_true',
            help='–û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –∫—ç—à–∏ –ø–æ—Å–ª–µ –ø–æ–∫–∞–∑–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏',
        )
        parser.add_argument(
            '--cache',
            type=str,
            choices=['default', 'profiles', 'search', 'messages', 'all'],
            default='all',
            help='–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫—ç—à–∞',
        )

    def handle(self, *args, **options):
        self.stdout.write(
            self.style.SUCCESS('=== –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∞–π—Ç–∞ –∑–Ω–∞–∫–æ–º—Å—Ç–≤ ===\n')
        )

        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫—ç—à–∞
        stats = get_cache_stats()
        
        if options['cache'] == 'all':
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –∫—ç—à–∏
            for cache_name, cache_info in stats.items():
                if cache_name != 'error':
                    self.show_cache_info(cache_name, cache_info)
        else:
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –∫—ç—à
            cache_name = options['cache']
            if cache_name in stats:
                self.show_cache_info(cache_name, stats[cache_name])
            else:
                self.stdout.write(
                    self.style.ERROR(f'–ö—ç—à "{cache_name}" –Ω–µ –Ω–∞–π–¥–µ–Ω')
                )

        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        self.stdout.write('\n=== –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è ===')
        self.stdout.write(f'Backend: {stats.get("default", {}).get("backend", "Unknown")}')
        
        if 'error' in stats:
            self.stdout.write(
                self.style.ERROR(f'–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {stats["error"]}')
            )

        # –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–µ–π –µ—Å–ª–∏ –∑–∞–ø—Ä–æ—à–µ–Ω–∞
        if options['clear']:
            self.clear_caches(options['cache'])

    def show_cache_info(self, cache_name, cache_info):
        """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º –∫—ç—à–µ"""
        self.stdout.write(f'\nüì¶ –ö—ç—à: {cache_name.upper()}')
        self.stdout.write(f'   Backend: {cache_info.get("backend", "Unknown")}')
        self.stdout.write(f'   Location: {cache_info.get("location", "Unknown")}')
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏–∑ settings –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–∞
        from django.conf import settings
        cache_config = getattr(settings, 'CACHES', {}).get(cache_name, {})
        if cache_config:
            timeout = cache_config.get('TIMEOUT', '–ù–µ —É–∫–∞–∑–∞–Ω')
            max_entries = cache_config.get('OPTIONS', {}).get('MAX_ENTRIES', '–ù–µ —É–∫–∞–∑–∞–Ω')
            self.stdout.write(f'   Timeout: {timeout} —Å–µ–∫—É–Ω–¥')
            self.stdout.write(f'   Max Entries: {max_entries}')

    def clear_caches(self, cache_type):
        """–û—á–∏—Å—Ç–∏—Ç—å –∫—ç—à–∏"""
        self.stdout.write('\n=== –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–µ–π ===')
        
        if cache_type == 'all':
            cache_manager.default_cache.clear()
            cache_manager.profiles_cache.clear()
            cache_manager.search_cache.clear()
            cache_manager.messages_cache.clear()
            self.stdout.write(
                self.style.SUCCESS('‚úÖ –í—Å–µ –∫—ç—à–∏ –æ—á–∏—â–µ–Ω—ã')
            )
        elif cache_type == 'default':
            cache_manager.default_cache.clear()
            self.stdout.write(
                self.style.SUCCESS('‚úÖ –û—Å–Ω–æ–≤–Ω–æ–π –∫—ç—à –æ—á–∏—â–µ–Ω')
            )
        elif cache_type == 'profiles':
            cache_manager.profiles_cache.clear()
            self.stdout.write(
                self.style.SUCCESS('‚úÖ –ö—ç—à –ø—Ä–æ—Ñ–∏–ª–µ–π –æ—á–∏—â–µ–Ω')
            )
        elif cache_type == 'search':
            cache_manager.search_cache.clear()
            self.stdout.write(
                self.style.SUCCESS('‚úÖ –ö—ç—à –ø–æ–∏—Å–∫–∞ –æ—á–∏—â–µ–Ω')
            )
        elif cache_type == 'messages':
            cache_manager.messages_cache.clear()
            self.stdout.write(
                self.style.SUCCESS('‚úÖ –ö—ç—à —Å–æ–æ–±—â–µ–Ω–∏–π –æ—á–∏—â–µ–Ω')
            ) 